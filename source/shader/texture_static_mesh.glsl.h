#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input K:/skate/content/shader/texture_static_mesh.glsl --output K:/skate/source/shader/texture_static_mesh.glsl.h --slang glsl430:hlsl5:metal_macos

    Overview:
    =========
    Shader program: 'shadow':
        Get shader desc: shadow_shader_desc(sg_query_backend());
        Vertex Shader: vs_shadow
        Fragment Shader: fs_shadow
        Attributes:
            ATTR_shadow_a_position => 0
            ATTR_shadow_a_normal => 1
            ATTR_shadow_a_uv => 2
            ATTR_shadow_a_vertex_index => 3
    Shader program: 'texture_static_mesh':
        Get shader desc: texture_static_mesh_shader_desc(sg_query_backend());
        Vertex Shader: texture_static_mesh_vs
        Fragment Shader: texture_static_mesh_fs
        Attributes:
            ATTR_texture_static_mesh_a_position => 0
            ATTR_texture_static_mesh_a_normal => 1
            ATTR_texture_static_mesh_a_uv => 2
            ATTR_texture_static_mesh_a_vertex_index => 3
    Bindings:
        Uniform block 'vs_shadow_params':
            C struct: vs_shadow_params_t
            Bind slot: UB_vs_shadow_params => 0
        Uniform block 'texture_static_mesh_vs_params':
            C struct: texture_static_mesh_vs_params_t
            Bind slot: UB_texture_static_mesh_vs_params => 0
        Uniform block 'texture_static_mesh_fs_params':
            C struct: texture_static_mesh_fs_params_t
            Bind slot: UB_texture_static_mesh_fs_params => 2
        Image 'shadow_tex':
            Image type: SG_IMAGETYPE_ARRAY
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_shadow_tex => 1
        Image 'tex':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_tex => 0
        Sampler 'shadow_smp':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_shadow_smp => 1
        Sampler 'smp':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_smp => 0
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before texture_static_mesh.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_shadow_a_position (0)
#define ATTR_shadow_a_normal (1)
#define ATTR_shadow_a_uv (2)
#define ATTR_shadow_a_vertex_index (3)
#define ATTR_texture_static_mesh_a_position (0)
#define ATTR_texture_static_mesh_a_normal (1)
#define ATTR_texture_static_mesh_a_uv (2)
#define ATTR_texture_static_mesh_a_vertex_index (3)
#define UB_vs_shadow_params (0)
#define UB_texture_static_mesh_vs_params (0)
#define UB_texture_static_mesh_fs_params (2)
#define IMG_shadow_tex (1)
#define IMG_tex (0)
#define SMP_shadow_smp (1)
#define SMP_smp (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_shadow_params_t {
    mat4 light_view_mvp;
} vs_shadow_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct texture_static_mesh_vs_params_t {
    mat4 model;
    mat4 mvp;
} texture_static_mesh_vs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct texture_static_mesh_fs_params_t {
    mat4 view;
    mat4 light_view_proj[4];
    float cascade_splits_shadow_map_size[4][4];
    vec3 light_ambient;
    uint8_t _pad_396[4];
    vec3 light_color;
    uint8_t _pad_412[4];
    vec3 light_dir;
    uint8_t _pad_428[4];
    vec3 eye_pos;
    uint8_t _pad_444[4];
} texture_static_mesh_fs_params_t;
#pragma pack(pop)
/*
    #version 430

    uniform vec4 vs_shadow_params[4];
    layout(location = 0) in vec3 a_position;
    layout(location = 1) in vec3 a_normal;
    layout(location = 2) in vec2 a_uv;
    layout(location = 3) in float a_vertex_index;

    void main()
    {
        gl_Position = mat4(vs_shadow_params[0], vs_shadow_params[1], vs_shadow_params[2], vs_shadow_params[3]) * vec4(a_position, 1.0);
        gl_Position.z = 2.0 * gl_Position.z - gl_Position.w;
    }

*/
static const uint8_t vs_shadow_source_glsl430[417] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x5f,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x5f,0x75,
    0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x61,0x5f,0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x69,0x6e,0x64,0x65,0x78,0x3b,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,
    0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x2e,0x7a,0x20,0x3d,0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x20,0x2d,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x77,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #version 430

    void main()
    {
    }

*/
static const uint8_t fs_shadow_source_glsl430[32] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    #version 430

    uniform vec4 texture_static_mesh_vs_params[8];
    layout(location = 0) in vec3 a_position;
    layout(location = 1) out vec4 world_pos;
    layout(location = 2) out vec3 world_norm;
    layout(location = 1) in vec3 a_normal;
    layout(location = 0) out vec3 color;
    layout(location = 3) out vec2 uv;
    layout(location = 2) in vec2 a_uv;
    layout(location = 3) in float a_vertex_index;

    void main()
    {
        vec4 _32 = vec4(a_position, 1.0);
        gl_Position = mat4(texture_static_mesh_vs_params[4], texture_static_mesh_vs_params[5], texture_static_mesh_vs_params[6], texture_static_mesh_vs_params[7]) * _32;
        mat4 _38 = mat4(texture_static_mesh_vs_params[0], texture_static_mesh_vs_params[1], texture_static_mesh_vs_params[2], texture_static_mesh_vs_params[3]);
        world_pos = _38 * _32;
        world_norm = normalize((_38 * vec4(a_normal, 0.0)).xyz);
        color = vec3(1.0);
        uv = a_uv;
    }

*/
static const uint8_t texture_static_mesh_vs_source_glsl430[882] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x34,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x77,0x6f,0x72,
    0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x32,0x20,0x61,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,
    0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x5f,0x76,0x65,0x72,0x74,0x65,0x78,
    0x5f,0x69,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x33,0x32,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,
    0x61,0x74,0x34,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,
    0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x34,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,
    0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x33,
    0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x33,0x38,0x20,
    0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,
    0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,
    0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,
    0x5f,0x33,0x38,0x20,0x2a,0x20,0x5f,0x33,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x77,
    0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,0x5f,0x33,0x38,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,
    0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x61,0x5f,0x75,0x76,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
/*
    #version 430

    vec4 _363;

    uniform vec4 texture_static_mesh_fs_params[28];
    layout(binding = 16) uniform sampler2D tex_smp;
    layout(binding = 17) uniform sampler2DArray shadow_tex_shadow_smp;

    layout(location = 3) in vec2 uv;
    layout(location = 1) in vec4 world_pos;
    layout(location = 2) in vec3 world_norm;
    layout(location = 0) out vec4 frag_color;
    layout(location = 0) in vec3 color;

    int choose_cascade(float view_depth)
    {
        for (int i = 0; i < 3; i++)
        {
            if (view_depth <= (texture_static_mesh_fs_params[i * 1 + 20].z / texture_static_mesh_fs_params[i * 1 + 20].w))
            {
                return i;
            }
        }
        return 3;
    }

    float pcf_shadow_array(vec3 uvz, int cascadeIndex, vec2 texelSize, float depthBias)
    {
        bool _77 = uvz.x < 0.0;
        bool _85;
        if (!_77)
        {
            _85 = uvz.x > 1.0;
        }
        else
        {
            _85 = _77;
        }
        bool _93;
        if (!_85)
        {
            _93 = uvz.y < 0.0;
        }
        else
        {
            _93 = _85;
        }
        bool _100;
        if (!_93)
        {
            _100 = uvz.y > 1.0;
        }
        else
        {
            _100 = _93;
        }
        if (_100)
        {
            return 0.0;
        }
        float shadow = 0.0;
        for (int dy = -1; dy <= 1; dy++)
        {
            for (int dx = -1; dx <= 1; dx++)
            {
                shadow += float((uvz.z - depthBias) > texture(shadow_tex_shadow_smp, vec3(uvz.xy + (vec2(float(dx), float(dy)) * texelSize), float(cascadeIndex))).x);
            }
        }
        return shadow * 0.111111111938953399658203125;
    }

    float shadow_csm(vec3 world_position, vec3 world_normal, inout int casecade_idx)
    {
        float param = -(mat4(texture_static_mesh_fs_params[0], texture_static_mesh_fs_params[1], texture_static_mesh_fs_params[2], texture_static_mesh_fs_params[3]) * vec4(world_position, 1.0)).z;
        casecade_idx = choose_cascade(param);
        vec4 _210 = mat4(texture_static_mesh_fs_params[casecade_idx * 4 + 4], texture_static_mesh_fs_params[casecade_idx * 4 + 5], texture_static_mesh_fs_params[casecade_idx * 4 + 6], texture_static_mesh_fs_params[casecade_idx * 4 + 7]) * vec4(world_position, 1.0);
        vec3 _216 = _210.xyz / vec3(_210.w);
        vec4 _351;
        _351.x = _216.x;
        _351.y = _216.y;
        vec3 param_1 = vec3((_351.xy * 0.5) + vec2(0.5), (_216.z * 0.5) + 0.5);
        int param_2 = casecade_idx;
        vec2 param_3 = vec2(1.0) / max(vec2(texture_static_mesh_fs_params[casecade_idx * 1 + 20].z, texture_static_mesh_fs_params[casecade_idx * 1 + 20].w), vec2(1.0));
        float param_4 = 0.0007999999797903001308441162109375 + (0.0024999999441206455230712890625 * (1.0 - max(dot(normalize(world_normal), -normalize(texture_static_mesh_fs_params[26].xyz)), 0.0)));
        return 1.0 - pcf_shadow_array(param_1, param_2, param_3, param_4);
    }

    void main()
    {
        vec3 _300 = texture(tex_smp, uv).xyz;
        vec3 _308 = normalize(world_norm);
        vec3 param = world_pos.xyz;
        vec3 param_1 = _308;
        int param_2;
        float _314 = shadow_csm(param, param_1, param_2);
        frag_color = vec4((texture_static_mesh_fs_params[24].xyz * _300) + (((texture_static_mesh_fs_params[25].xyz * _300) * max(dot(_308, -normalize(texture_static_mesh_fs_params[26].xyz)), 0.0)) * _314), 1.0);
    }

*/
static const uint8_t texture_static_mesh_fs_source_glsl430[3136] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x33,0x36,0x33,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,
    0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x32,0x38,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,0x36,0x29,0x20,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,
    0x20,0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,0x37,0x29,0x20,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,
    0x41,0x72,0x72,0x61,0x79,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x74,0x65,0x78,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x77,0x6f,0x72,0x6c,
    0x64,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x69,
    0x6e,0x74,0x20,0x63,0x68,0x6f,0x6f,0x73,0x65,0x5f,0x63,0x61,0x73,0x63,0x61,0x64,
    0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x76,0x69,0x65,0x77,0x5f,0x64,0x65,0x70,
    0x74,0x68,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,
    0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x33,0x3b,
    0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x76,0x69,0x65,0x77,0x5f,0x64,0x65,0x70,
    0x74,0x68,0x20,0x3c,0x3d,0x20,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,
    0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x69,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x32,0x30,0x5d,
    0x2e,0x7a,0x20,0x2f,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,
    0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x69,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x32,0x30,0x5d,0x2e,0x77,
    0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x69,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x33,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x63,0x66,0x5f,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x61,0x72,0x72,0x61,0x79,0x28,0x76,0x65,0x63,0x33,0x20,
    0x75,0x76,0x7a,0x2c,0x20,0x69,0x6e,0x74,0x20,0x63,0x61,0x73,0x63,0x61,0x64,0x65,
    0x49,0x6e,0x64,0x65,0x78,0x2c,0x20,0x76,0x65,0x63,0x32,0x20,0x74,0x65,0x78,0x65,
    0x6c,0x53,0x69,0x7a,0x65,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x65,0x70,
    0x74,0x68,0x42,0x69,0x61,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,
    0x6f,0x6c,0x20,0x5f,0x37,0x37,0x20,0x3d,0x20,0x75,0x76,0x7a,0x2e,0x78,0x20,0x3c,
    0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,
    0x38,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x37,0x37,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x38,0x35,0x20,0x3d,0x20,0x75,0x76,0x7a,0x2e,0x78,0x20,0x3e,0x20,0x31,0x2e,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,
    0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x38,0x35,0x20,0x3d,0x20,0x5f,0x37,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x39,0x33,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x38,0x35,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x33,0x20,0x3d,
    0x20,0x75,0x76,0x7a,0x2e,0x79,0x20,0x3c,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x33,0x20,0x3d,
    0x20,0x5f,0x38,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,0x30,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x21,0x5f,0x39,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x30,0x30,0x20,0x3d,0x20,0x75,0x76,
    0x7a,0x2e,0x79,0x20,0x3e,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x30,0x30,0x20,0x3d,0x20,0x5f,
    0x39,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x31,0x30,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x64,0x79,0x20,
    0x3d,0x20,0x2d,0x31,0x3b,0x20,0x64,0x79,0x20,0x3c,0x3d,0x20,0x31,0x3b,0x20,0x64,
    0x79,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x64,0x78,0x20,0x3d,
    0x20,0x2d,0x31,0x3b,0x20,0x64,0x78,0x20,0x3c,0x3d,0x20,0x31,0x3b,0x20,0x64,0x78,
    0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x20,0x2b,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x75,0x76,0x7a,0x2e,0x7a,
    0x20,0x2d,0x20,0x64,0x65,0x70,0x74,0x68,0x42,0x69,0x61,0x73,0x29,0x20,0x3e,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x74,
    0x65,0x78,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x28,0x75,0x76,0x7a,0x2e,0x78,0x79,0x20,0x2b,0x20,0x28,0x76,0x65,
    0x63,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x64,0x78,0x29,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x64,0x79,0x29,0x29,0x20,0x2a,0x20,0x74,0x65,0x78,0x65,0x6c,
    0x53,0x69,0x7a,0x65,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x63,0x61,0x73,
    0x63,0x61,0x64,0x65,0x49,0x6e,0x64,0x65,0x78,0x29,0x29,0x29,0x2e,0x78,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x68,0x61,0x64,
    0x6f,0x77,0x20,0x2a,0x20,0x30,0x2e,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,
    0x39,0x33,0x38,0x39,0x35,0x33,0x33,0x39,0x39,0x36,0x35,0x38,0x32,0x30,0x33,0x31,
    0x32,0x35,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x5f,0x63,0x73,0x6d,0x28,0x76,0x65,0x63,0x33,0x20,0x77,0x6f,0x72,
    0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x69,0x6e,0x6f,0x75,0x74,0x20,0x69,0x6e,0x74,0x20,0x63,0x61,0x73,0x65,0x63,0x61,
    0x64,0x65,0x5f,0x69,0x64,0x78,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x2d,0x28,0x6d,0x61,
    0x74,0x34,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,
    0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x30,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,
    0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,
    0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,
    0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x20,0x3d,0x20,0x63,0x68,
    0x6f,0x6f,0x73,0x65,0x5f,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,
    0x31,0x30,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x63,0x61,0x73,0x65,0x63,0x61,0x64,0x65,
    0x5f,0x69,0x64,0x78,0x20,0x2a,0x20,0x34,0x20,0x2b,0x20,0x34,0x5d,0x2c,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,
    0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x63,0x61,0x73,
    0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x20,0x2a,0x20,0x34,0x20,0x2b,0x20,
    0x35,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,
    0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x63,0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x20,0x2a,
    0x20,0x34,0x20,0x2b,0x20,0x36,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x63,0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,
    0x69,0x64,0x78,0x20,0x2a,0x20,0x34,0x20,0x2b,0x20,0x37,0x5d,0x29,0x20,0x2a,0x20,
    0x76,0x65,0x63,0x34,0x28,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x32,0x31,0x36,0x20,0x3d,0x20,0x5f,0x32,0x31,0x30,0x2e,
    0x78,0x79,0x7a,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x32,0x31,0x30,0x2e,
    0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x35,
    0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x33,0x35,0x31,0x2e,0x78,0x20,0x3d,0x20,
    0x5f,0x32,0x31,0x36,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x33,0x35,0x31,
    0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x31,0x36,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x28,0x5f,0x33,0x35,0x31,0x2e,0x78,0x79,0x20,0x2a,0x20,
    0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x35,0x29,
    0x2c,0x20,0x28,0x5f,0x32,0x31,0x36,0x2e,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,
    0x20,0x2b,0x20,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x63,0x61,0x73,0x65,0x63,
    0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,
    0x28,0x31,0x2e,0x30,0x29,0x20,0x2f,0x20,0x6d,0x61,0x78,0x28,0x76,0x65,0x63,0x32,
    0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,
    0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x63,
    0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x20,0x2a,0x20,0x31,0x20,
    0x2b,0x20,0x32,0x30,0x5d,0x2e,0x7a,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x63,0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,
    0x69,0x64,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x32,0x30,0x5d,0x2e,0x77,0x29,
    0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,
    0x3d,0x20,0x30,0x2e,0x30,0x30,0x30,0x37,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x39,
    0x37,0x39,0x30,0x33,0x30,0x30,0x31,0x33,0x30,0x38,0x34,0x34,0x31,0x31,0x36,0x32,
    0x31,0x30,0x39,0x33,0x37,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x30,0x30,0x32,0x34,
    0x39,0x39,0x39,0x39,0x39,0x39,0x34,0x34,0x31,0x32,0x30,0x36,0x34,0x35,0x35,0x32,
    0x33,0x30,0x37,0x31,0x32,0x38,0x39,0x30,0x36,0x32,0x35,0x20,0x2a,0x20,0x28,0x31,
    0x2e,0x30,0x20,0x2d,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x29,0x2c,0x20,0x2d,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,
    0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,
    0x36,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x31,0x2e,0x30,
    0x20,0x2d,0x20,0x70,0x63,0x66,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x61,0x72,
    0x72,0x61,0x79,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x33,0x30,0x30,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x28,0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x30,
    0x38,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x77,0x6f,
    0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,
    0x64,0x5f,0x70,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x33,
    0x30,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x33,0x31,0x34,0x20,0x3d,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x63,0x73,0x6d,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,
    0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x32,0x34,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x5f,0x33,0x30,0x30,0x29,0x20,
    0x2b,0x20,0x28,0x28,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,
    0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x32,0x35,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x5f,0x33,0x30,
    0x30,0x29,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x5f,0x33,0x30,
    0x38,0x2c,0x20,0x2d,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,
    0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x36,0x5d,0x2e,
    0x78,0x79,0x7a,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x5f,
    0x33,0x31,0x34,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    cbuffer vs_shadow_params : register(b0)
    {
        row_major float4x4 _19_light_view_mvp : packoffset(c0);
    };


    static float4 gl_Position;
    static float3 a_position;
    static float3 a_normal;
    static float2 a_uv;
    static float a_vertex_index;

    struct SPIRV_Cross_Input
    {
        float3 a_position : TEXCOORD0;
        float3 a_normal : TEXCOORD1;
        float2 a_uv : TEXCOORD2;
        float a_vertex_index : TEXCOORD3;
    };

    struct SPIRV_Cross_Output
    {
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        gl_Position = mul(float4(a_position, 1.0f), _19_light_view_mvp);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        a_position = stage_input.a_position;
        a_normal = stage_input.a_normal;
        a_uv = stage_input.a_uv;
        a_vertex_index = stage_input.a_vertex_index;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        return stage_output;
    }
*/
static const uint8_t vs_shadow_source_hlsl5[900] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,
    0x77,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,
    0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,
    0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x5f,0x31,0x39,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x76,0x69,0x65,0x77,0x5f,
    0x6d,0x76,0x70,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x30,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x61,0x5f,0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x5f,0x76,0x65,0x72,0x74,0x65,
    0x78,0x5f,0x69,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,
    0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,
    0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x61,0x5f,0x75,0x76,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,
    0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x61,0x5f,0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x69,0x6e,0x64,0x65,0x78,0x20,0x3a,
    0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x31,0x39,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6d,0x76,0x70,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,
    0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x61,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x5f,0x75,0x76,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,
    0x5f,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x5f,0x76,0x65,0x72,0x74,0x65,
    0x78,0x5f,0x69,0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,0x5f,0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x69,
    0x6e,0x64,0x65,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,
    0x0a,0x7d,0x0a,0x00,
};
/*
    void frag_main()
    {
    }

    void main()
    {
        frag_main();
    }
*/
static const uint8_t fs_shadow_source_hlsl5[56] = {
    0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    cbuffer texture_static_mesh_vs_params : register(b0)
    {
        row_major float4x4 _19_model : packoffset(c0);
        row_major float4x4 _19_mvp : packoffset(c4);
    };


    static float4 gl_Position;
    static float3 a_position;
    static float4 world_pos;
    static float3 world_norm;
    static float3 a_normal;
    static float3 color;
    static float2 uv;
    static float2 a_uv;
    static float a_vertex_index;

    struct SPIRV_Cross_Input
    {
        float3 a_position : TEXCOORD0;
        float3 a_normal : TEXCOORD1;
        float2 a_uv : TEXCOORD2;
        float a_vertex_index : TEXCOORD3;
    };

    struct SPIRV_Cross_Output
    {
        float3 color : TEXCOORD0;
        float4 world_pos : TEXCOORD1;
        float3 world_norm : TEXCOORD2;
        float2 uv : TEXCOORD3;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        float4 _32 = float4(a_position, 1.0f);
        gl_Position = mul(_32, _19_mvp);
        world_pos = mul(_32, _19_model);
        world_norm = normalize(mul(float4(a_normal, 0.0f), _19_model).xyz);
        color = 1.0f.xxx;
        uv = a_uv;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        a_position = stage_input.a_position;
        a_normal = stage_input.a_normal;
        a_uv = stage_input.a_uv;
        a_vertex_index = stage_input.a_vertex_index;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.world_pos = world_pos;
        stage_output.world_norm = world_norm;
        stage_output.color = color;
        stage_output.uv = uv;
        return stage_output;
    }
*/
static const uint8_t texture_static_mesh_vs_source_hlsl5[1466] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,
    0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,
    0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,
    0x39,0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,
    0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x5f,0x31,0x39,0x5f,0x6d,0x76,0x70,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x77,0x6f,0x72,0x6c,
    0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x20,0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x61,0x5f,0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x5f,0x76,0x65,0x72,0x74,0x65,0x78,
    0x5f,0x69,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,
    0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,
    0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x20,0x61,0x5f,0x75,0x76,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,
    0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,
    0x5f,0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x69,0x6e,0x64,0x65,0x78,0x20,0x3a,0x20,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,
    0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x5f,0x33,0x32,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x61,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x5f,0x33,0x32,0x2c,0x20,0x5f,0x31,0x39,0x5f,
    0x6d,0x76,0x70,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,
    0x70,0x6f,0x73,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x5f,0x33,0x32,0x2c,0x20,0x5f,
    0x31,0x39,0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x77,
    0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,
    0x2c,0x20,0x5f,0x31,0x39,0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x29,0x2e,0x78,0x79,0x7a,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x31,
    0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,
    0x3d,0x20,0x61,0x5f,0x75,0x76,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,
    0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,
    0x2e,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x5f,0x75,0x76,0x20,0x3d,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,0x5f,0x75,0x76,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x61,0x5f,0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x69,0x6e,0x64,0x65,
    0x78,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,
    0x61,0x5f,0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x69,0x6e,0x64,0x65,0x78,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x77,
    0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x77,0x6f,0x72,0x6c,0x64,
    0x5f,0x6e,0x6f,0x72,0x6d,0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,
    0x72,0x6d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x75,0x76,0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,
    0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    static float4 _363;

    cbuffer texture_static_mesh_fs_params : register(b0)
    {
        row_major float4x4 _51_view : packoffset(c0);
        row_major float4x4 _51_light_view_proj[4] : packoffset(c4);
        float4 _51_cascade_splits_shadow_map_size[4] : packoffset(c20);
        float3 _51_light_ambient : packoffset(c24);
        float3 _51_light_color : packoffset(c25);
        float3 _51_light_dir : packoffset(c26);
        float3 _51_eye_pos : packoffset(c27);
    };

    Texture2DArray<float4> shadow_tex : register(t0);
    SamplerState shadow_smp : register(s0);
    Texture2D<float4> tex : register(t1);
    SamplerState smp : register(s1);

    static float2 uv;
    static float4 world_pos;
    static float3 world_norm;
    static float4 frag_color;
    static float3 color;

    struct SPIRV_Cross_Input
    {
        float3 color : TEXCOORD0;
        float4 world_pos : TEXCOORD1;
        float3 world_norm : TEXCOORD2;
        float2 uv : TEXCOORD3;
    };

    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
    };

    int choose_cascade(float view_depth)
    {
        for (int i = 0; i < 3; i++)
        {
            if (view_depth <= (_51_cascade_splits_shadow_map_size[i].z / _51_cascade_splits_shadow_map_size[i].w))
            {
                return i;
            }
        }
        return 3;
    }

    float pcf_shadow_array(float3 uvz, int cascadeIndex, float2 texelSize, float depthBias)
    {
        bool _77 = uvz.x < 0.0f;
        bool _85;
        if (!_77)
        {
            _85 = uvz.x > 1.0f;
        }
        else
        {
            _85 = _77;
        }
        bool _93;
        if (!_85)
        {
            _93 = uvz.y < 0.0f;
        }
        else
        {
            _93 = _85;
        }
        bool _100;
        if (!_93)
        {
            _100 = uvz.y > 1.0f;
        }
        else
        {
            _100 = _93;
        }
        if (_100)
        {
            return 0.0f;
        }
        float shadow = 0.0f;
        for (int dy = -1; dy <= 1; dy++)
        {
            for (int dx = -1; dx <= 1; dx++)
            {
                shadow += float((uvz.z - depthBias) > shadow_tex.Sample(shadow_smp, float3(uvz.xy + (float2(float(dx), float(dy)) * texelSize), float(cascadeIndex))).x);
            }
        }
        return shadow * 0.111111111938953399658203125f;
    }

    float shadow_csm(float3 world_position, float3 world_normal, inout int casecade_idx)
    {
        float param = -mul(float4(world_position, 1.0f), _51_view).z;
        casecade_idx = choose_cascade(param);
        float4 _210 = mul(float4(world_position, 1.0f), _51_light_view_proj[casecade_idx]);
        float3 _216 = _210.xyz / _210.w.xxx;
        float4 _351;
        _351.x = _216.x;
        _351.y = _216.y;
        float3 param_1 = float3((_351.xy * 0.5f) + 0.5f.xx, (_216.z * 0.5f) + 0.5f);
        int param_2 = casecade_idx;
        float2 param_3 = 1.0f.xx / max(float2(_51_cascade_splits_shadow_map_size[casecade_idx].z, _51_cascade_splits_shadow_map_size[casecade_idx].w), 1.0f.xx);
        float param_4 = 0.0007999999797903001308441162109375f + (0.0024999999441206455230712890625f * (1.0f - max(dot(normalize(world_normal), -normalize(_51_light_dir)), 0.0f)));
        return 1.0f - pcf_shadow_array(param_1, param_2, param_3, param_4);
    }

    void frag_main()
    {
        float3 _300 = tex.Sample(smp, uv).xyz;
        float3 _308 = normalize(world_norm);
        float3 param = world_pos.xyz;
        float3 param_1 = _308;
        int param_2;
        float _314 = shadow_csm(param, param_1, param_2);
        frag_color = float4((_51_light_ambient * _300) + (((_51_light_color * _300) * max(dot(_308, -normalize(_51_light_dir)), 0.0f)) * _314), 1.0f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        uv = stage_input.uv;
        world_pos = stage_input.world_pos;
        world_norm = stage_input.world_norm;
        color = stage_input.color;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        return stage_output;
    }
*/
static const uint8_t texture_static_mesh_fs_source_hlsl5[3654] = {
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x33,
    0x36,0x33,0x3b,0x0a,0x0a,0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,
    0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,
    0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x78,0x34,0x20,0x5f,0x35,0x31,0x5f,0x76,0x69,0x65,0x77,0x20,0x3a,0x20,0x70,0x61,
    0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x78,0x34,0x20,0x5f,0x35,0x31,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x76,
    0x69,0x65,0x77,0x5f,0x70,0x72,0x6f,0x6a,0x5b,0x34,0x5d,0x20,0x3a,0x20,0x70,0x61,
    0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x35,0x31,0x5f,0x63,0x61,0x73,
    0x63,0x61,0x64,0x65,0x5f,0x73,0x70,0x6c,0x69,0x74,0x73,0x5f,0x73,0x68,0x61,0x64,
    0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x73,0x69,0x7a,0x65,0x5b,0x34,0x5d,0x20,0x3a,
    0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x32,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x35,0x31,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,0x3a,
    0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x32,0x34,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x35,0x31,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x32,0x35,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x35,0x31,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x32,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x35,0x31,0x5f,0x65,0x79,0x65,0x5f,0x70,
    0x6f,0x73,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x32,0x37,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,
    0x65,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,
    0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x74,0x65,0x78,0x20,0x3a,0x20,0x72,0x65,
    0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x30,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,
    0x73,0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,
    0x30,0x29,0x3b,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x3e,0x20,0x74,0x65,0x78,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,
    0x73,0x74,0x65,0x72,0x28,0x74,0x31,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x73,0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,
    0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x31,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x3b,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x77,0x6f,0x72,0x6c,
    0x64,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x3b,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x20,0x3a,
    0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,
    0x6d,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x69,0x6e,0x74,0x20,0x63,0x68,0x6f,0x6f,0x73,0x65,0x5f,0x63,0x61,0x73,
    0x63,0x61,0x64,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x76,0x69,0x65,0x77,0x5f,
    0x64,0x65,0x70,0x74,0x68,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,
    0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,
    0x20,0x33,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x76,0x69,0x65,0x77,0x5f,
    0x64,0x65,0x70,0x74,0x68,0x20,0x3c,0x3d,0x20,0x28,0x5f,0x35,0x31,0x5f,0x63,0x61,
    0x73,0x63,0x61,0x64,0x65,0x5f,0x73,0x70,0x6c,0x69,0x74,0x73,0x5f,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x73,0x69,0x7a,0x65,0x5b,0x69,0x5d,0x2e,
    0x7a,0x20,0x2f,0x20,0x5f,0x35,0x31,0x5f,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x5f,
    0x73,0x70,0x6c,0x69,0x74,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,
    0x70,0x5f,0x73,0x69,0x7a,0x65,0x5b,0x69,0x5d,0x2e,0x77,0x29,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x69,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x33,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x63,0x66,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,
    0x61,0x72,0x72,0x61,0x79,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x75,0x76,0x7a,
    0x2c,0x20,0x69,0x6e,0x74,0x20,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x49,0x6e,0x64,
    0x65,0x78,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x65,0x6c,
    0x53,0x69,0x7a,0x65,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x65,0x70,0x74,
    0x68,0x42,0x69,0x61,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,
    0x6c,0x20,0x5f,0x37,0x37,0x20,0x3d,0x20,0x75,0x76,0x7a,0x2e,0x78,0x20,0x3c,0x20,
    0x30,0x2e,0x30,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,
    0x38,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x37,0x37,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x38,0x35,0x20,0x3d,0x20,0x75,0x76,0x7a,0x2e,0x78,0x20,0x3e,0x20,0x31,0x2e,
    0x30,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,
    0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x5f,0x38,0x35,0x20,0x3d,0x20,0x5f,0x37,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x39,0x33,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x38,0x35,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x33,0x20,
    0x3d,0x20,0x75,0x76,0x7a,0x2e,0x79,0x20,0x3c,0x20,0x30,0x2e,0x30,0x66,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x33,
    0x20,0x3d,0x20,0x5f,0x38,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,0x30,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x39,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x30,0x30,0x20,0x3d,0x20,
    0x75,0x76,0x7a,0x2e,0x79,0x20,0x3e,0x20,0x31,0x2e,0x30,0x66,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x30,0x30,0x20,
    0x3d,0x20,0x5f,0x39,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x30,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x30,0x2e,0x30,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x20,0x3d,0x20,0x30,
    0x2e,0x30,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,
    0x74,0x20,0x64,0x79,0x20,0x3d,0x20,0x2d,0x31,0x3b,0x20,0x64,0x79,0x20,0x3c,0x3d,
    0x20,0x31,0x3b,0x20,0x64,0x79,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,
    0x20,0x64,0x78,0x20,0x3d,0x20,0x2d,0x31,0x3b,0x20,0x64,0x78,0x20,0x3c,0x3d,0x20,
    0x31,0x3b,0x20,0x64,0x78,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,
    0x68,0x61,0x64,0x6f,0x77,0x20,0x2b,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,
    0x75,0x76,0x7a,0x2e,0x7a,0x20,0x2d,0x20,0x64,0x65,0x70,0x74,0x68,0x42,0x69,0x61,
    0x73,0x29,0x20,0x3e,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x74,0x65,0x78,0x2e,
    0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x73,0x6d,
    0x70,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x75,0x76,0x7a,0x2e,0x78,0x79,
    0x20,0x2b,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x28,0x64,0x78,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x64,0x79,0x29,0x29,
    0x20,0x2a,0x20,0x74,0x65,0x78,0x65,0x6c,0x53,0x69,0x7a,0x65,0x29,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x49,0x6e,0x64,0x65,
    0x78,0x29,0x29,0x29,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x20,0x2a,0x20,0x30,0x2e,0x31,
    0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x39,0x33,0x38,0x39,0x35,0x33,0x33,0x39,
    0x39,0x36,0x35,0x38,0x32,0x30,0x33,0x31,0x32,0x35,0x66,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x63,0x73,0x6d,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x77,
    0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x69,0x6e,0x6f,
    0x75,0x74,0x20,0x69,0x6e,0x74,0x20,0x63,0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,
    0x69,0x64,0x78,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x2d,0x6d,0x75,0x6c,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x35,0x31,0x5f,
    0x76,0x69,0x65,0x77,0x29,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x61,0x73,
    0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x20,0x3d,0x20,0x63,0x68,0x6f,0x6f,
    0x73,0x65,0x5f,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,
    0x31,0x30,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,
    0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x35,0x31,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x72,0x6f,0x6a,0x5b,0x63,0x61,0x73,0x65,0x63,
    0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x31,0x36,0x20,0x3d,0x20,0x5f,0x32,0x31,
    0x30,0x2e,0x78,0x79,0x7a,0x20,0x2f,0x20,0x5f,0x32,0x31,0x30,0x2e,0x77,0x2e,0x78,
    0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,
    0x33,0x35,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x33,0x35,0x31,0x2e,0x78,0x20,
    0x3d,0x20,0x5f,0x32,0x31,0x36,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x33,
    0x35,0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x31,0x36,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x28,0x5f,0x33,0x35,0x31,
    0x2e,0x78,0x79,0x20,0x2a,0x20,0x30,0x2e,0x35,0x66,0x29,0x20,0x2b,0x20,0x30,0x2e,
    0x35,0x66,0x2e,0x78,0x78,0x2c,0x20,0x28,0x5f,0x32,0x31,0x36,0x2e,0x7a,0x20,0x2a,
    0x20,0x30,0x2e,0x35,0x66,0x29,0x20,0x2b,0x20,0x30,0x2e,0x35,0x66,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,
    0x3d,0x20,0x63,0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x33,0x20,0x3d,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x20,0x2f,0x20,0x6d,
    0x61,0x78,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x35,0x31,0x5f,0x63,0x61,
    0x73,0x63,0x61,0x64,0x65,0x5f,0x73,0x70,0x6c,0x69,0x74,0x73,0x5f,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x73,0x69,0x7a,0x65,0x5b,0x63,0x61,0x73,
    0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x5d,0x2e,0x7a,0x2c,0x20,0x5f,0x35,
    0x31,0x5f,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x5f,0x73,0x70,0x6c,0x69,0x74,0x73,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x73,0x69,0x7a,0x65,
    0x5b,0x63,0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x5d,0x2e,0x77,
    0x29,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,
    0x20,0x30,0x2e,0x30,0x30,0x30,0x37,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x39,0x37,
    0x39,0x30,0x33,0x30,0x30,0x31,0x33,0x30,0x38,0x34,0x34,0x31,0x31,0x36,0x32,0x31,
    0x30,0x39,0x33,0x37,0x35,0x66,0x20,0x2b,0x20,0x28,0x30,0x2e,0x30,0x30,0x32,0x34,
    0x39,0x39,0x39,0x39,0x39,0x39,0x34,0x34,0x31,0x32,0x30,0x36,0x34,0x35,0x35,0x32,
    0x33,0x30,0x37,0x31,0x32,0x38,0x39,0x30,0x36,0x32,0x35,0x66,0x20,0x2a,0x20,0x28,
    0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x2d,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x5f,0x35,0x31,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,
    0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x70,
    0x63,0x66,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x61,0x72,0x72,0x61,0x79,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x34,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,0x30,0x30,0x20,0x3d,0x20,0x74,0x65,0x78,
    0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,
    0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x5f,0x33,0x30,0x38,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x33,0x30,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x31,0x34,0x20,0x3d,0x20,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x63,0x73,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x28,0x5f,0x35,0x31,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,0x2a,0x20,
    0x5f,0x33,0x30,0x30,0x29,0x20,0x2b,0x20,0x28,0x28,0x28,0x5f,0x35,0x31,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x5f,0x33,0x30,
    0x30,0x29,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x5f,0x33,0x30,
    0x38,0x2c,0x20,0x2d,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x35,
    0x31,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x29,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x66,0x29,0x29,0x20,0x2a,0x20,0x5f,0x33,0x31,0x34,0x29,0x2c,0x20,0x31,
    0x2e,0x30,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,
    0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,
    0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x77,
    0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x77,
    0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,
    0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct vs_shadow_params
    {
        float4x4 light_view_mvp;
    };

    struct main0_out
    {
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float3 a_position [[attribute(0)]];
    };

    vertex main0_out main0(main0_in in [[stage_in]], constant vs_shadow_params& _19 [[buffer(0)]])
    {
        main0_out out = {};
        out.gl_Position = _19.light_view_mvp * float4(in.a_position, 1.0);
        return out;
    }

*/
static const uint8_t vs_shadow_source_metal_macos[465] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,
    0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6d,0x76,0x70,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,
    0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,
    0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,
    0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,
    0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x39,0x20,0x5b,0x5b,0x62,
    0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,
    0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6d,0x76,0x70,0x20,0x2a,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x61,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    fragment void main0()
    {
    }

*/
static const uint8_t fs_shadow_source_metal_macos[100] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,
    0x20,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x29,0x0a,0x7b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct texture_static_mesh_vs_params
    {
        float4x4 model;
        float4x4 mvp;
    };

    struct main0_out
    {
        float3 color [[user(locn0)]];
        float4 world_pos [[user(locn1)]];
        float3 world_norm [[user(locn2)]];
        float2 uv [[user(locn3)]];
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float3 a_position [[attribute(0)]];
        float3 a_normal [[attribute(1)]];
        float2 a_uv [[attribute(2)]];
    };

    vertex main0_out main0(main0_in in [[stage_in]], constant texture_static_mesh_vs_params& _19 [[buffer(0)]])
    {
        main0_out out = {};
        float4 _32 = float4(in.a_position, 1.0);
        out.gl_Position = _19.mvp * _32;
        out.world_pos = _19.model * _32;
        out.world_norm = fast::normalize((_19.model * float4(in.a_normal, 0.0)).xyz);
        out.color = float3(1.0);
        out.uv = in.a_uv;
        return out;
    }

*/
static const uint8_t texture_static_mesh_vs_source_metal_macos[895] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,
    0x73,0x68,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,0x6f,0x64,0x65,
    0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x6d,0x76,0x70,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x75,
    0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,
    0x6f,0x73,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x77,
    0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,
    0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,
    0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x61,0x5f,
    0x75,0x76,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x32,
    0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,
    0x6e,0x74,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,
    0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x26,0x20,0x5f,0x31,0x39,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,
    0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x33,0x32,0x20,0x3d,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x61,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x5f,0x31,0x39,0x2e,0x6d,0x76,0x70,0x20,0x2a,0x20,0x5f,0x33,0x32,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,
    0x6f,0x73,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x20,0x2a,
    0x20,0x5f,0x33,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x77,0x6f,
    0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,
    0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,0x5f,0x31,0x39,0x2e,
    0x6d,0x6f,0x64,0x65,0x6c,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,
    0x6e,0x2e,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,
    0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x75,0x76,0x20,
    0x3d,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"

    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct texture_static_mesh_fs_params
    {
        float4x4 view;
        float4x4 light_view_proj[4];
        float4 cascade_splits_shadow_map_size[4];
        float3 light_ambient;
        float3 light_color;
        float3 light_dir;
        float3 eye_pos;
    };

    constant float4 _363 = {};

    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };

    struct main0_in
    {
        float4 world_pos [[user(locn1)]];
        float3 world_norm [[user(locn2)]];
        float2 uv [[user(locn3)]];
    };

    static inline __attribute__((always_inline))
    int choose_cascade(thread const float& view_depth, constant texture_static_mesh_fs_params& _51)
    {
        for (int i = 0; i < 3; i++)
        {
            if (view_depth <= (_51.cascade_splits_shadow_map_size[i].z / _51.cascade_splits_shadow_map_size[i].w))
            {
                return i;
            }
        }
        return 3;
    }

    static inline __attribute__((always_inline))
    float pcf_shadow_array(thread const float3& uvz, thread const int& cascadeIndex, thread const float2& texelSize, thread const float& depthBias, texture2d_array<float> shadow_tex, sampler shadow_smp)
    {
        bool _77 = uvz.x < 0.0;
        bool _85;
        if (!_77)
        {
            _85 = uvz.x > 1.0;
        }
        else
        {
            _85 = _77;
        }
        bool _93;
        if (!_85)
        {
            _93 = uvz.y < 0.0;
        }
        else
        {
            _93 = _85;
        }
        bool _100;
        if (!_93)
        {
            _100 = uvz.y > 1.0;
        }
        else
        {
            _100 = _93;
        }
        if (_100)
        {
            return 0.0;
        }
        float shadow = 0.0;
        for (int dy = -1; dy <= 1; dy++)
        {
            for (int dx = -1; dx <= 1; dx++)
            {
                float3 _155 = float3(uvz.xy + (float2(float(dx), float(dy)) * texelSize), float(cascadeIndex));
                shadow += float((uvz.z - depthBias) > shadow_tex.sample(shadow_smp, _155.xy, uint(rint(_155.z))).x);
            }
        }
        return shadow * 0.111111111938953399658203125;
    }

    static inline __attribute__((always_inline))
    float shadow_csm(thread const float3& world_position, thread const float3& world_normal, thread int& casecade_idx, constant texture_static_mesh_fs_params& _51, texture2d_array<float> shadow_tex, sampler shadow_smp)
    {
        float param = -(_51.view * float4(world_position, 1.0)).z;
        casecade_idx = choose_cascade(param, _51);
        float4 _210 = _51.light_view_proj[casecade_idx] * float4(world_position, 1.0);
        float3 _216 = _210.xyz / float3(_210.w);
        float4 _351;
        _351.x = _216.x;
        _351.y = _216.y;
        float3 param_1 = float3((_351.xy * 0.5) + float2(0.5), (_216.z * 0.5) + 0.5);
        int param_2 = casecade_idx;
        float2 param_3 = float2(1.0) / fast::max(float2(_51.cascade_splits_shadow_map_size[casecade_idx].z, _51.cascade_splits_shadow_map_size[casecade_idx].w), float2(1.0));
        float param_4 = 0.0007999999797903001308441162109375 + (0.0024999999441206455230712890625 * (1.0 - fast::max(dot(fast::normalize(world_normal), -fast::normalize(_51.light_dir)), 0.0)));
        return 1.0 - pcf_shadow_array(param_1, param_2, param_3, param_4, shadow_tex, shadow_smp);
    }

    fragment main0_out main0(main0_in in [[stage_in]], constant texture_static_mesh_fs_params& _51 [[buffer(0)]], texture2d_array<float> shadow_tex [[texture(0)]], texture2d<float> tex [[texture(1)]], sampler shadow_smp [[sampler(0)]], sampler smp [[sampler(1)]])
    {
        main0_out out = {};
        float3 _300 = tex.sample(smp, in.uv).xyz;
        float3 _308 = fast::normalize(in.world_norm);
        float3 param = in.world_pos.xyz;
        float3 param_1 = _308;
        int param_2;
        float _314 = shadow_csm(param, param_1, param_2, _51, shadow_tex, shadow_smp);
        out.frag_color = float4((_51.light_ambient * _300) + (((_51.light_color * _300) * fast::max(dot(_308, -fast::normalize(_51.light_dir)), 0.0)) * _314), 1.0);
        return out;
    }

*/
static const uint8_t texture_static_mesh_fs_source_metal_macos[3848] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x78,0x34,0x20,0x76,0x69,0x65,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x76,0x69,
    0x65,0x77,0x5f,0x70,0x72,0x6f,0x6a,0x5b,0x34,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x5f,0x73,
    0x70,0x6c,0x69,0x74,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,
    0x5f,0x73,0x69,0x7a,0x65,0x5b,0x34,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,
    0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x65,0x79,0x65,
    0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x61,
    0x6e,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x33,0x36,0x33,0x20,0x3d,
    0x20,0x7b,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,
    0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x77,0x6f,
    0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x20,0x5b,
    0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,
    0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,
    0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,
    0x69,0x6e,0x74,0x20,0x63,0x68,0x6f,0x6f,0x73,0x65,0x5f,0x63,0x61,0x73,0x63,0x61,
    0x64,0x65,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x26,0x20,0x76,0x69,0x65,0x77,0x5f,0x64,0x65,0x70,0x74,
    0x68,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,0x5f,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x35,0x31,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,
    0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x33,0x3b,0x20,0x69,0x2b,0x2b,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x76,0x69,0x65,0x77,0x5f,0x64,0x65,0x70,0x74,0x68,0x20,0x3c,
    0x3d,0x20,0x28,0x5f,0x35,0x31,0x2e,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x5f,0x73,
    0x70,0x6c,0x69,0x74,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,
    0x5f,0x73,0x69,0x7a,0x65,0x5b,0x69,0x5d,0x2e,0x7a,0x20,0x2f,0x20,0x5f,0x35,0x31,
    0x2e,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x5f,0x73,0x70,0x6c,0x69,0x74,0x73,0x5f,
    0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x73,0x69,0x7a,0x65,0x5b,
    0x69,0x5d,0x2e,0x77,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x69,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x33,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,
    0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,
    0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,
    0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x63,0x66,0x5f,0x73,
    0x68,0x61,0x64,0x6f,0x77,0x5f,0x61,0x72,0x72,0x61,0x79,0x28,0x74,0x68,0x72,0x65,
    0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,
    0x20,0x75,0x76,0x7a,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x69,0x6e,0x74,0x26,0x20,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x49,
    0x6e,0x64,0x65,0x78,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x26,0x20,0x74,0x65,0x78,0x65,0x6c,
    0x53,0x69,0x7a,0x65,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x26,0x20,0x64,0x65,0x70,0x74,0x68,0x42,
    0x69,0x61,0x73,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x5f,0x61,
    0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x73,0x68,0x61,0x64,
    0x6f,0x77,0x5f,0x74,0x65,0x78,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,
    0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x73,0x6d,0x70,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x37,0x37,0x20,0x3d,0x20,0x75,0x76,0x7a,
    0x2e,0x78,0x20,0x3c,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,
    0x6f,0x6c,0x20,0x5f,0x38,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x21,0x5f,0x37,0x37,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x38,0x35,0x20,0x3d,0x20,0x75,0x76,0x7a,0x2e,0x78,0x20,
    0x3e,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x38,0x35,0x20,0x3d,0x20,0x5f,0x37,0x37,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x39,
    0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x38,0x35,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,
    0x39,0x33,0x20,0x3d,0x20,0x75,0x76,0x7a,0x2e,0x79,0x20,0x3c,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,
    0x39,0x33,0x20,0x3d,0x20,0x5f,0x38,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,0x30,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x39,0x33,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x30,0x30,0x20,
    0x3d,0x20,0x75,0x76,0x7a,0x2e,0x79,0x20,0x3e,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x30,0x30,
    0x20,0x3d,0x20,0x5f,0x39,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x30,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x20,0x3d,0x20,0x30,
    0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,
    0x20,0x64,0x79,0x20,0x3d,0x20,0x2d,0x31,0x3b,0x20,0x64,0x79,0x20,0x3c,0x3d,0x20,
    0x31,0x3b,0x20,0x64,0x79,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,
    0x64,0x78,0x20,0x3d,0x20,0x2d,0x31,0x3b,0x20,0x64,0x78,0x20,0x3c,0x3d,0x20,0x31,
    0x3b,0x20,0x64,0x78,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x35,0x35,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x75,0x76,0x7a,0x2e,0x78,0x79,0x20,0x2b,0x20,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x64,0x78,0x29,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x64,0x79,0x29,0x29,0x20,0x2a,0x20,0x74,0x65,0x78,0x65,
    0x6c,0x53,0x69,0x7a,0x65,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x63,0x61,
    0x73,0x63,0x61,0x64,0x65,0x49,0x6e,0x64,0x65,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x20,0x2b,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x75,0x76,0x7a,0x2e,0x7a,
    0x20,0x2d,0x20,0x64,0x65,0x70,0x74,0x68,0x42,0x69,0x61,0x73,0x29,0x20,0x3e,0x20,
    0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x74,0x65,0x78,0x2e,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x5f,0x31,
    0x35,0x35,0x2e,0x78,0x79,0x2c,0x20,0x75,0x69,0x6e,0x74,0x28,0x72,0x69,0x6e,0x74,
    0x28,0x5f,0x31,0x35,0x35,0x2e,0x7a,0x29,0x29,0x29,0x2e,0x78,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x20,0x2a,0x20,0x30,0x2e,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x39,0x33,
    0x38,0x39,0x35,0x33,0x33,0x39,0x39,0x36,0x35,0x38,0x32,0x30,0x33,0x31,0x32,0x35,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,
    0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,
    0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,
    0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x63,
    0x73,0x6d,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x77,0x6f,0x72,
    0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,
    0x64,0x20,0x69,0x6e,0x74,0x26,0x20,0x63,0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,
    0x69,0x64,0x78,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,
    0x68,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x35,0x31,
    0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x5f,0x61,0x72,0x72,0x61,
    0x79,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,
    0x74,0x65,0x78,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x5f,0x73,0x6d,0x70,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x2d,0x28,0x5f,
    0x35,0x31,0x2e,0x76,0x69,0x65,0x77,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x61,
    0x73,0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x20,0x3d,0x20,0x63,0x68,0x6f,
    0x6f,0x73,0x65,0x5f,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x2c,0x20,0x5f,0x35,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x5f,0x32,0x31,0x30,0x20,0x3d,0x20,0x5f,0x35,0x31,0x2e,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x72,0x6f,0x6a,0x5b,0x63,
    0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x5d,0x20,0x2a,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x31,0x36,0x20,0x3d,0x20,0x5f,0x32,
    0x31,0x30,0x2e,0x78,0x79,0x7a,0x20,0x2f,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x5f,0x32,0x31,0x30,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x5f,0x33,0x35,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x33,
    0x35,0x31,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,0x31,0x36,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x5f,0x33,0x35,0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x31,0x36,
    0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x28,0x5f,0x33,0x35,0x31,0x2e,0x78,0x79,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,
    0x2b,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x30,0x2e,0x35,0x29,0x2c,0x20,0x28,
    0x5f,0x32,0x31,0x36,0x2e,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,
    0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x63,0x61,0x73,0x65,0x63,0x61,0x64,0x65,
    0x5f,0x69,0x64,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x28,0x31,0x2e,0x30,0x29,0x20,0x2f,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,
    0x61,0x78,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x35,0x31,0x2e,0x63,0x61,
    0x73,0x63,0x61,0x64,0x65,0x5f,0x73,0x70,0x6c,0x69,0x74,0x73,0x5f,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x73,0x69,0x7a,0x65,0x5b,0x63,0x61,0x73,
    0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x5d,0x2e,0x7a,0x2c,0x20,0x5f,0x35,
    0x31,0x2e,0x63,0x61,0x73,0x63,0x61,0x64,0x65,0x5f,0x73,0x70,0x6c,0x69,0x74,0x73,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x73,0x69,0x7a,0x65,
    0x5b,0x63,0x61,0x73,0x65,0x63,0x61,0x64,0x65,0x5f,0x69,0x64,0x78,0x5d,0x2e,0x77,
    0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x31,0x2e,0x30,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x34,0x20,0x3d,0x20,0x30,0x2e,0x30,0x30,0x30,0x37,0x39,0x39,0x39,0x39,0x39,
    0x39,0x37,0x39,0x37,0x39,0x30,0x33,0x30,0x30,0x31,0x33,0x30,0x38,0x34,0x34,0x31,
    0x31,0x36,0x32,0x31,0x30,0x39,0x33,0x37,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x30,
    0x30,0x32,0x34,0x39,0x39,0x39,0x39,0x39,0x39,0x34,0x34,0x31,0x32,0x30,0x36,0x34,
    0x35,0x35,0x32,0x33,0x30,0x37,0x31,0x32,0x38,0x39,0x30,0x36,0x32,0x35,0x20,0x2a,
    0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,
    0x78,0x28,0x64,0x6f,0x74,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x29,0x2c,0x20,0x2d,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x35,0x31,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x64,0x69,0x72,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,
    0x70,0x63,0x66,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x61,0x72,0x72,0x61,0x79,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x34,0x2c,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x74,0x65,0x78,0x2c,
    0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x73,0x6d,0x70,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x73,0x74,0x61,0x74,0x69,0x63,0x5f,0x6d,0x65,0x73,0x68,
    0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x35,0x31,0x20,
    0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x5f,0x61,0x72,0x72,0x61,0x79,0x3c,0x66,
    0x6c,0x6f,0x61,0x74,0x3e,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x74,0x65,0x78,
    0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,0x5d,0x2c,
    0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,
    0x3e,0x20,0x74,0x65,0x78,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,
    0x31,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x73,0x6d,0x70,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x20,0x73,0x6d,0x70,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x28,0x31,
    0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,0x30,0x30,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,0x6d,0x70,0x2c,
    0x20,0x69,0x6e,0x2e,0x75,0x76,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,0x30,0x38,0x20,0x3d,0x20,0x66,
    0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,
    0x6e,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3d,0x20,0x69,0x6e,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x33,0x30,0x38,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x31,0x34,0x20,0x3d,
    0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x63,0x73,0x6d,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x32,0x2c,0x20,0x5f,0x35,0x31,0x2c,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x5f,0x74,0x65,0x78,0x2c,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x73,0x6d,0x70,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x28,
    0x5f,0x35,0x31,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,
    0x74,0x20,0x2a,0x20,0x5f,0x33,0x30,0x30,0x29,0x20,0x2b,0x20,0x28,0x28,0x28,0x5f,
    0x35,0x31,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,
    0x20,0x5f,0x33,0x30,0x30,0x29,0x20,0x2a,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,
    0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x5f,0x33,0x30,0x38,0x2c,0x20,0x2d,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x35,
    0x31,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x29,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x5f,0x33,0x31,0x34,0x29,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,
    0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
static inline const sg_shader_desc* shadow_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_shadow_source_glsl430;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_shadow_source_glsl430;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "a_position";
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].glsl_name = "a_normal";
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].glsl_name = "a_uv";
            desc.attrs[3].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[3].glsl_name = "a_vertex_index";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 4;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_shadow_params";
            desc.label = "shadow_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_shadow_source_hlsl5;
            desc.vertex_func.d3d11_target = "vs_5_0";
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_shadow_source_hlsl5;
            desc.fragment_func.d3d11_target = "ps_5_0";
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].hlsl_sem_name = "TEXCOORD";
            desc.attrs[0].hlsl_sem_index = 0;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].hlsl_sem_name = "TEXCOORD";
            desc.attrs[1].hlsl_sem_index = 1;
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].hlsl_sem_name = "TEXCOORD";
            desc.attrs[2].hlsl_sem_index = 2;
            desc.attrs[3].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[3].hlsl_sem_name = "TEXCOORD";
            desc.attrs[3].hlsl_sem_index = 3;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.label = "shadow_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_MACOS) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_shadow_source_metal_macos;
            desc.vertex_func.entry = "main0";
            desc.fragment_func.source = (const char*)fs_shadow_source_metal_macos;
            desc.fragment_func.entry = "main0";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[3].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].msl_buffer_n = 0;
            desc.label = "shadow_shader";
        }
        return &desc;
    }
    return 0;
}
static inline const sg_shader_desc* texture_static_mesh_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)texture_static_mesh_vs_source_glsl430;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)texture_static_mesh_fs_source_glsl430;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "a_position";
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].glsl_name = "a_normal";
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].glsl_name = "a_uv";
            desc.attrs[3].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[3].glsl_name = "a_vertex_index";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 128;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 8;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "texture_static_mesh_vs_params";
            desc.uniform_blocks[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[2].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[2].size = 448;
            desc.uniform_blocks[2].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[2].glsl_uniforms[0].array_count = 28;
            desc.uniform_blocks[2].glsl_uniforms[0].glsl_name = "texture_static_mesh_fs_params";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_ARRAY;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "tex_smp";
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.image_sampler_pairs[1].glsl_name = "shadow_tex_shadow_smp";
            desc.label = "texture_static_mesh_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)texture_static_mesh_vs_source_hlsl5;
            desc.vertex_func.d3d11_target = "vs_5_0";
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)texture_static_mesh_fs_source_hlsl5;
            desc.fragment_func.d3d11_target = "ps_5_0";
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].hlsl_sem_name = "TEXCOORD";
            desc.attrs[0].hlsl_sem_index = 0;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].hlsl_sem_name = "TEXCOORD";
            desc.attrs[1].hlsl_sem_index = 1;
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].hlsl_sem_name = "TEXCOORD";
            desc.attrs[2].hlsl_sem_index = 2;
            desc.attrs[3].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[3].hlsl_sem_name = "TEXCOORD";
            desc.attrs[3].hlsl_sem_index = 3;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 128;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.uniform_blocks[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[2].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[2].size = 448;
            desc.uniform_blocks[2].hlsl_register_b_n = 0;
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[0].hlsl_register_t_n = 1;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_ARRAY;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.images[1].hlsl_register_t_n = 0;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[0].hlsl_register_s_n = 1;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].hlsl_register_s_n = 0;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.label = "texture_static_mesh_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_MACOS) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)texture_static_mesh_vs_source_metal_macos;
            desc.vertex_func.entry = "main0";
            desc.fragment_func.source = (const char*)texture_static_mesh_fs_source_metal_macos;
            desc.fragment_func.entry = "main0";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[3].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 128;
            desc.uniform_blocks[0].msl_buffer_n = 0;
            desc.uniform_blocks[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[2].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[2].size = 448;
            desc.uniform_blocks[2].msl_buffer_n = 0;
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[0].msl_texture_n = 1;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_ARRAY;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.images[1].msl_texture_n = 0;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[0].msl_sampler_n = 1;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].msl_sampler_n = 0;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.label = "texture_static_mesh_shader";
        }
        return &desc;
    }
    return 0;
}
